This is not a read me right now (actually never a README).  It’s more like…todolist/comminication between stef and xiaoyi.

To-Do eventually or soon or maybe if there’s time in the near future:
(edit: attempted to sort them somewhat by priority, feel free to change up order)

entry page - information on entry (date created, location, description) - is this done??
entry page - info on trips (description, location) - everything is there, but needs to be formatted
edit/delete entries and functionality
edit/delete photo functionality
return and depart date need to be dates not strings
information on photos - store them in blob?
wrong inputs for sign up/sign in should warn user (wrong username/password, etc.)
location value should be geo point, not string
removing/editing an image when uploading should actually edit/remove it
multiple image upload - prevent user from clicking “choose file” twice OR have it support that
backend checks all entries for images to pull for trip preview, not just last one
thumbnails (backend is cropping, but showing up small sometimes??what)
remembering user is logged in (ex: going to the login in page when user key is in storage should redirect to homepage)
logout button (and removing user key from local storage)
separate page for viewing individual posts (or a way to view images larger w/the caption like Facebook does)
remove print statements and logs eventually?

————————

Not really a read me - just letting xiaoyi know what I did and what she needs to do before I go to bed!


June 8:
I finished insert entry and connected inputs with backend, but only started on inserting blob key.  Name of whatever holds the input file should have the same name as the entry key so this will work like this:
BlobKey blobKey = blobs.get(entryKey); 
the entry key is saved as a variable somewhere in addentry.js
TODO: 
-submit button for add entry doesn’t work (why does this seem to be a common theme?)
-test that blob stuff works and connect upload file part of add entry to the servlet
-For viewing trips (and entries I suppose): I got it to display trip titles.  We need to instead have it so it the images display.  Maybe if for each trip we get its image information and place it as text in a div of a class “trip” or something.  Then in javascript we find this class and format the image. 
Same thing for entries, we need to have it display all the info wrapped in some class then formatted (because we can’t query from javascript, it has to be in the html).  Entries should be easier — we can first do without pictures and at least all the text will be there.


June 7:
Did: 
added homepage.jsp, got rid of date picker views for stuff that wasn’t supposed to be dates, tested insert trip- had to submit through console because button not connected
Todo: 
-open up the console in developer tools when you run-there’s a bunch of errors of missing files.  If it worked on your computer then they must be somewhere, but I can’t find them..
-submit button doesn’t work.  I tried a bunch of stuff.  It’s weird because I can submit it through the console: ("#addTripsavebtn").click();
-can’t get the user key to be set/retrieved as a parameter.  If you try to add trip, there’s a null pointer as if the user key was null, even though it clearly isn’t in the url itself.
-load grid of trips



June 6: 
To pass trip info, check function addTrip() in Homepage.js. And I did some changes in InsertTripServlet.java. There is SimpleDateFormat function http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html. I added it but haven’t tested it. Also, to change the format of date that passed from homepage.js, you can check momentjs.com. I am now using the default format. If we decide not to use time, we can set it false.

Note: I had to change the version to 1.9.3 for it work work, but you might have to change it to 1.9.5 on yours! (pom.xml)
XM: lol, I am using v1.9.6…
June 4, 2014:
for sign in/sign up:
sign in: works, but need to fix redirecting to tripview.jsp
sign up: works, same issue as sign in. Some nice things to add: checking and warning the user about an invalid email address (without the @ sign), warning the user when not all of the fields are filled in
XM: I do have checking in the frontend code. gonna double check and make sure the user can’t submit if inputs are invalid

tripview.jsp and viewing trips:
Can’t test this because I can’t get it to run (keep getting 404 errors).  Basically just followed the tutorial, but I don’t know if it’s working yet.  What it’s supposed to do is query the trips that belong that user and display all of their titles — not even getting into pictures yet, just trying to see if it works.  
Todo: make it so we can actually get to this page, make sure it works for just the titles.  Then (or eventually), get that trip’s first entry and that entry’s first picture.  Figure out how to put that picture where it’s supposed to go.

InsertTripServlet.java
inserts a trip given the parameters.  
TODO: make sure everything is correct and consistent with what the trip entity is supposed to look like.  Then connect this to the form for adding a trip (same way as for signing up), get the return and depart date parameters and turn them into a Date object and pass them in (depends on how they’re inputed with the date picker), do checking on parameters so nothing is set to null/if no dates picked it defaults to either “” or current date

Entries: didn’t start this.  do same thing for as for trips basically.

June 3, 2014:
Tutorial: https://developers.google.com/appengine/docs/java/gettingstarted/introduction
All web backend stuff is located it the folder travellog -> guestbook
By the way, it’s called guestbook because the tutorial I was following was called guestbook.  It made set up a lot easier, but it’s super hard to change the name so we’re sticking with guestbook (haha).

The tutorial explains how to test it on your local server.  When you open it up, it should be the regular sign in page plus a button I made for testing that adds a test user (you might need to scroll to see it?)

To view data while the local server is running go here: http://localhost:8080/_ah/admin/datastore
(I think you have to be logged into the team gmail account first though)
try inserting the test user and see if he shows up there

.jsp files: eventually we need to convert all the html files to asp files.  For right now, we have signin.jsp.  I doubt we will need more pages before tomorrow.

Java code:
All are located in:
GAEBackend/travellog/guesbook/guestbook-war/src/main/java/com/google/appengine/demos

GuestbookServlet: the given example from the tutorial

InsertUserServlet: for now, it makes a silly user named “Goofy Goober” (you can look in this file for all of his info).  The code that is commented out “should” work to insert a user based on the input fields.  Right now this code is called when you click the “Add Test User” button in signin.jsp Look at the example in the tutorial and how I connected this one to see how to set it up.  

SignInServlet: Takes in the input info for email and password and checks if there is a user with that email and if the password matches.  This one seems to work, as I tested it with the made up user.  Right now, all it does is print out to the console though.

TODO:
-sign up page -> make sign up page into form (if it isn’t already) with method get and action /insertUser
		 give all its input fields a “name” attribute that correspond to what they are (password should have name password, etc.)
		make sure the button for sign up is actually connected to the java code
		uncomment the code in InsertUserServlet so that it actually get’s the signup information

if time: actually do stuff when sign in is successful/unsuccessful, lead user to trip view if successful, store user’s key somewhere after sign in so we can use it for getting posts and things
		




